package org.code_challenger.services;

import org.code_challenger.repository.TokenRepository;
import org.code_challenger.repository.dto.TokenCredentials;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.UUID;

@Service
public class TokenService {
    private final TokenRepository tokenRepository;

    @Autowired
    public TokenService(TokenRepository tokenRepository) {
        this.tokenRepository = tokenRepository;
    }

    /**
     * Storage authentication token on database with expiration time and user UUID
     *
     * @param token          String UUID generated by UUID service
     * @param userId         UUID of the user associated with the token
     * @param expirationTime Expiration time of the token
     */
    public void StoreSecurityToken(String token, UUID userId, LocalDateTime expirationTime) {
        TokenCredentials tokenEntity = new TokenCredentials();
        tokenEntity.setToken(UUID.fromString(token));
        tokenEntity.setUserId(userId);
        tokenEntity.setExpirationTime(expirationTime);
        tokenRepository.save(tokenEntity);
    }
}
